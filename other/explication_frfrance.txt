CORRECTION
1 - verifier que tous les dockers sont sous alpine
2 - lancer le minikube sh setup.sh
3 - watch sur docker -> pour voir les coneteneurs qui se crée
4 - watch kubernete -> regarder l’infrastructure se créer
5 - explication NodePort vs ClusterIP : normalement 80 et 443 -> service en clusterIP à la place on utilise des NodePort (30-3200) augmenté
    - on peut donc voir les choses interne (
6 - se connecter -> cat ingress.yaml, nginx port 80

WORDPRESS - MYSQL - PHPMYADMIN
7 - wordpress/wp-admin -> pour créer un user
8 - on vérifie que phpmyadmin a bien reçu le nouvel user
9 - ouvrir le dashboard -> aller dans les pod -> « … » -> executer pour acceder au terminal
10 - éteindre la base de donné mysql -> service mariadb stop
11 - verifier que ca redémarre
12 - verifier que la donnée est persistante : user toujours présent
13 - expliquer les volumes persistants
14 - on peut faire la meme chose sur les autres conteneurs
NGINX
15 - nginx : 2 services (sshd _) donc 2 raisons possibles de redémarrer
16 - explication des boucles pour chequer les services
17 - liveness est une autre manière de verifier que les conteneurs sont encore en vie
18 - connection ssh -> depuis terminal ssh -l admin adresses_minikube -p 2222 -> 22 deja utilisé
19 - kubernetes : utilise par défaut 22. @bbrunet - @salty

GRAFANA - INFLUXDB - TELEGRAF
20 - sur grafana verifier qu’il y a bien 7 conteneurs
21 - telegraf récupére des donner pour chaque conteneur
22 - transmis a influxdb -> visualiser sur grafana
23 - vérifier la persistance (dans le dashboard, service influxdb stop), regarder a nouveau les données sous grafana
24 - rappeler que c’est persistant garce au manifest/.yaml
25 - grafana étant un logiciel -> il faut kill le process avec top pour voir le num du process

FTPS
26 - ouvrir filezilla et renseigner les logins
27 - sécurisé puisque pop-up
28 - faire un transfert et
29 - ftp est egalement un logiciel -> les liveness sont toujours plus long a redémarré

TELEGRAF
30 - present sur tous les conteneurs
31 - si telegraf ne marche pas, le conteneur redémarre egalement





./setup.sh
kubectl get all -o wide
minikube dashboard
watch kubectl get all -o wide
minikube ip
grep -r "FROM alpine" src/*Dockerfile


INGRESS CONTROLLER NGINX
code srcs/ingress.yalm ->Ingress permet de rediriger a une adresse IP via un path fournit
cd src/nginx/src/redirection

kubectl exec phpmyadmin  -- ls /var/www
cat

//quand tu va rediregrer avec u // ingérer va te rédigerez quand on passait avec les port il redirais pas au bon endroit 
on a mis dans le dossier www pour faire les redirection 


FTPS
lancer filezilla
se co avec hote "minikube ip" identifient "admin" mdp "test123" port "21"
kubectl exec ftps ... -- touch /home/admin/ftp/files/test.txt 
kubectl exec fops... --run rf /home/admin/ftps/files/text.txt
filezilla supprime cree 

WORDPRESS MYSQL PHPMyadmin
connexion wordpress adresse IP:5050 ou /wordpress (admin,test123)
connection phpmyadmin adress IP:5000 ou /phpmyadmin (root,test123)
ajouter et supprimer user pour montrer la liaison 
kubectl exec mysql... --service mariaDB stop ->verifier redemarager et persistance des donne
code srcs/mysql/mysql.yalm->montrer volume persistant

kubectl delete service mysql
kubectl delete deploy mysql

montrer qu'on peu plus se co

kubectl apply -f srcs/mysql/mysql.yalm

GRAFANA & INFLUX
connecter grafana adresseIP : 3000 ou /grafana (admin test123)
ouvrir dashboard->dhasboard->manage->telegraf
ouvrir tous les serveur->serveur all
kubectl excuse influxes... --service influxdb stop ->serif redémarrage 

CLEE SHH
ssh admin@$(minikube ip) -p2222

shh adressIP -p 2222 -l admin ->explication utilisation du port 22 par kubernertis
appuyer yes mdp== admin 123
cd /;ls nains
kubectl exec nginx... --touch test.txt ->en dehors de nginx
ls dans nginx -> vérif test.txt
sudo service nginx stop ->dans ngxinx

PERSISANCE DES DONNEES
cat src/nginx/srcs/script.sh ->boucle relance script tournant en continue
kubectl exec phpmyadmin ... --stop voir tous les process en cours dexec 











